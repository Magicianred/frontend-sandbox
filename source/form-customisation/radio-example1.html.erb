---
title: Custom radio
---
<% content_for :assets do %>
  <%= stylesheet_link_tag 'form-customisation/styles' %>
<% end %>

<form class="form" action="">
  <h1>Custom radio</h1>

  <h2>Example 1</h2>
  <p>
    Hides the browser native radio and displays a custom radio.
    Makes use of the general sibling <code>~</code> and the CSS3 <code>:checked</code> selectors to toggle the radio without JavaScript.
  </p>

  <fieldset class="fieldset">
    <span class="input-custom input-custom--radio">
      <input aria-checked="false" name="something" id="something1" type="radio" value="1">
      <label class="input-custom__label" for="something1">
        <span class="input-custom__copy">
          I have read this
        </span>
        <span class="input-custom__icon"></span>
      </label>
    </span>

    <span class="input-custom input-custom--radio">
      <input aria-checked="false" name="something" id="something2" type="radio" value="1">
      <label class="input-custom__label" for="something2">
        <span class="input-custom__icon"></span>
        <span class="input-custom__copy">
          I have read this
        </span>
      </label>
    </span>

    <span class="input-custom input-custom--radio input-custom--l">
      <input aria-checked="false" name="something" id="something3" type="radio" value="1">
      <label class="input-custom__label" for="something3">
        <span class="input-custom__icon"></span>
        <span class="input-custom__copy">
          I have read this
        </span>
      </label>
    </span>
  </fieldset>

  <h3>Support</h3>

  <p>Supported in all CSS3-capable browsers. Displays a standard radio component in non-supporting browsers.</p>

  <ul>
    <li>Chrome</li>
    <li>Chrome Android</li>
    <li>Safari</li>
    <li>Mobile Safari</li>
    <li>Opera</li>
    <li>Firefox</li>
    <li>IE9/10/11</li>
  </ul>

  <h3>Accessibility</h3>
  <p>
    It provides the same accessibility as a standard component.
  </p>
</form>
